name: Docker Image CI - SySoftIntegra BackEnd

on:
  push:
    branches: 
      - "master"
      - "test"

jobs:
  build-and-deploy-master:
    if: github.ref == 'refs/heads/master'
    runs-on: self-hosted
    strategy:
      matrix:
        include:
          - environment: legrand-tiquepos
            service: legrand-tiquepos-services
          - environment: raices
            service: raices-services 
          - environment: felicitygirls-tiquepos
            service: felicitygirls-tiquepos-services 
          - environment: bodega-modelo
            service: bodega-modelo-services
          - environment: unnagro
            service: unnagro-services
          - environment: leatsac
            service: leatsac-services
          - environment: ferreteria-rym
            service: ferreteria-rym-services
          - environment: asiaticos-pcl
            service: asiaticos-pcl-services

    environment: ${{ matrix.environment }}
    
    env:  
      PORT: ${{ secrets.PORT }}
      APP_URL: ${{secrets.APP_URL}}
      APP_PDF: ${{secrets.APP_PDF}}
      APP_CPE_SUNAT: ${{secrets.APP_CPE_SUNAT}}
      APP_APIS_PERU: ${{secrets.APP_APIS_PERU}}

      DB_HOST: ${{ secrets.DB_HOST }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_PORT: ${{ secrets.DB_PORT }}

      CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      CLOUDFLARE_ACCESS_KEY_ID: ${{ secrets.CLOUDFLARE_ACCESS_KEY_ID }}
      CLOUDFLARE_SECRET_ACCESS_KEY: ${{ secrets.CLOUDFLARE_SECRET_ACCESS_KEY }}
      CLOUDFLARE_BUCKET_NAME: ${{ secrets.CLOUDFLARE_BUCKET_NAME }}

      FIREBASE_BUCKET: ${{ secrets.FIREBASE_BUCKET }}
      FIREBASE_URL_PUBLIC: ${{ secrets.FIREBASE_URL_PUBLIC }}
      FIREBASE_FILE_ACCOUNT_NAME: ${{ secrets.FIREBASE_FILE_ACCOUNT_NAME }}

      TZ: ${{ secrets.TZ }}
      ENVIRONMENT: ${{ vars.ENVIRONMENT }}
    
    steps:
      - name: Checkout código
        uses: actions/checkout@v3
    
      - name: Crear archivo .env
        run: |
          cat > .env <<EOL
          PORT="${{env.PORT}}"
          APP_URL="${{env.APP_URL}}"
          APP_PDF="${{env.APP_PDF}}"
          APP_CPE_SUNAT="${{env.APP_CPE_SUNAT}}"
          APP_APIS_PERU="${{env.APP_APIS_PERU}}"

          DB_HOST="${{env.DB_HOST}}"
          DB_USER="${{env.DB_USER}}"
          DB_PASSWORD="${{env.DB_PASSWORD}}"
          DB_NAME="${{env.DB_NAME}}"
          DB_PORT="${{env.DB_PORT}}"

          CLOUDFLARE_ACCOUNT_ID="${{env.CLOUDFLARE_ACCOUNT_ID}}"
          CLOUDFLARE_ACCESS_KEY_ID="${{env.CLOUDFLARE_ACCESS_KEY_ID}}"
          CLOUDFLARE_SECRET_ACCESS_KEY="${{env.CLOUDFLARE_SECRET_ACCESS_KEY}}"
          CLOUDFLARE_BUCKET_NAME="${{env.CLOUDFLARE_BUCKET_NAME}}"

          FIREBASE_BUCKET="${{env.FIREBASE_BUCKET}}"
          FIREBASE_URL_PUBLIC="${{env.FIREBASE_URL_PUBLIC}}"
          FIREBASE_FILE_ACCOUNT_NAME="${{env.FIREBASE_FILE_ACCOUNT_NAME}}"

          TZ="${{env.TZ}}"
          ENVIRONMENT=${{env.ENVIRONMENT}}
          EOL
    
      - name: Creando y ejecutando contenedor
        run: docker compose -f docker-compose.yml up --build ${{ matrix.service }} -d

  build-and-deploy-test:
    if: github.ref == 'refs/heads/test'
    runs-on: self-hosted
    strategy:
      matrix:
        include:
          - environment: test
            service: sysintegra-services

    environment: ${{ matrix.environment }}
    
    env:  
      PORT: ${{ secrets.PORT }}
      APP_URL: ${{secrets.APP_URL}}
      APP_PDF: ${{secrets.APP_PDF}}
      APP_CPE_SUNAT: ${{secrets.APP_CPE_SUNAT}}
      APP_APIS_PERU: ${{secrets.APP_APIS_PERU}}

      DB_HOST: ${{ secrets.DB_HOST }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_PORT: ${{ secrets.DB_PORT }}

      CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      CLOUDFLARE_ACCESS_KEY_ID: ${{ secrets.CLOUDFLARE_ACCESS_KEY_ID }}
      CLOUDFLARE_SECRET_ACCESS_KEY: ${{ secrets.CLOUDFLARE_SECRET_ACCESS_KEY }}
      CLOUDFLARE_BUCKET_NAME: ${{ secrets.CLOUDFLARE_BUCKET_NAME }}

      FIREBASE_BUCKET: ${{ secrets.FIREBASE_BUCKET }}
      FIREBASE_URL_PUBLIC: ${{ secrets.FIREBASE_URL_PUBLIC }}
      FIREBASE_FILE_ACCOUNT_NAME: ${{ secrets.FIREBASE_FILE_ACCOUNT_NAME }}

      TZ: ${{ secrets.TZ }}
      ENVIRONMENT: ${{ vars.ENVIRONMENT }}
    
    steps:
      - name: Checkout código
        uses: actions/checkout@v3
    
      - name: Crear archivo .env
        run: |
          cat > .env <<EOL
          PORT="${{env.PORT}}"
          APP_URL="${{env.APP_URL}}"
          APP_PDF="${{env.APP_PDF}}"
          APP_CPE_SUNAT="${{env.APP_CPE_SUNAT}}"
          APP_APIS_PERU="${{env.APP_APIS_PERU}}"

          DB_HOST="${{env.DB_HOST}}"
          DB_USER="${{env.DB_USER}}"
          DB_PASSWORD="${{env.DB_PASSWORD}}"
          DB_NAME="${{env.DB_NAME}}"
          DB_PORT="${{env.DB_PORT}}"

          CLOUDFLARE_ACCOUNT_ID="${{env.CLOUDFLARE_ACCOUNT_ID}}"
          CLOUDFLARE_ACCESS_KEY_ID="${{env.CLOUDFLARE_ACCESS_KEY_ID}}"
          CLOUDFLARE_SECRET_ACCESS_KEY="${{env.CLOUDFLARE_SECRET_ACCESS_KEY}}"
          CLOUDFLARE_BUCKET_NAME="${{env.CLOUDFLARE_BUCKET_NAME}}"

          FIREBASE_BUCKET="${{env.FIREBASE_BUCKET}}"
          FIREBASE_URL_PUBLIC="${{env.FIREBASE_URL_PUBLIC}}"
          FIREBASE_FILE_ACCOUNT_NAME="${{env.FIREBASE_FILE_ACCOUNT_NAME}}"

          TZ="${{env.TZ}}"
          ENVIRONMENT=${{env.ENVIRONMENT}}
          EOL
    
      - name: Creando y ejecutando contenedor
        run: docker compose -f docker-compose.yml up --build ${{ matrix.service }} -d
